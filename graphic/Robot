package graphic;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class Robot extends JPanel {
private final int WIDTH = 1000, HEIGHT = 600;
private final int ROBOT_S = 100;
private final int SPEED = 10;

private int x = WIDTH/2;
private int y = HEIGHT/2;


private boolean up,down,right,left,mouseP;
private int mouseP_x, mouseP_y;
 
	
	public Robot() {
		
		
		JFrame frame = new JFrame();
		
		frame.setSize(WIDTH, HEIGHT);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.add(this);
		frame.setLocationRelativeTo(null);
		frame.setResizable(false);
		frame.setVisible(true);
		frame.addKeyListener(new KeyListener() {
			@Override
			public void keyTyped(KeyEvent e) {
			}

			@Override
			public void keyPressed(KeyEvent e) {
				int keyCode = e.getKeyCode();
				if (keyCode == KeyEvent.VK_DOWN) 
					down=true;
				
				if (keyCode == KeyEvent.VK_UP) 
					up = true;
				
				if(keyCode==KeyEvent.VK_RIGHT)
					right = true;
				
				if(keyCode==KeyEvent.VK_LEFT)
					left = true;
			}

			@Override
			public void keyReleased(KeyEvent e) {
				int keyCode = e.getKeyCode();
				if (keyCode == KeyEvent.VK_DOWN) 
					down=false;
				
				if (keyCode == KeyEvent.VK_UP) 
					up = false;
				
				if(keyCode==KeyEvent.VK_RIGHT)
					right = false;
				
				if(keyCode==KeyEvent.VK_LEFT)
					left = false;
			}
		});
		
		frame.addMouseListener(new MouseListener() {

			@Override
			public void mouseClicked(MouseEvent e) {
			}

			@Override
			public void mousePressed(MouseEvent e) {
				mouseP = true;
				mouseP_x = e.getX()-ROBOT_S/2;
				mouseP_y = e.getY()-ROBOT_S/2;
			}

			@Override
			public void mouseReleased(MouseEvent e) {
				mouseP = false;
			}

			@Override
			public void mouseEntered(MouseEvent e) {
			}

			@Override
			public void mouseExited(MouseEvent e) {
			}
			
		});
		run();
		
	}
	
	public void run() {
		
		while (true) {
			repaint();
			move();
			
			try {
				Thread.sleep(10);
			} catch (Exception ex) {}
		}
		
	
	}
			
	public void paint(Graphics g) {
		g.setColor(Color.BLUE);
		g.fillRect(x, y, ROBOT_S, ROBOT_S);
	}
	
	public void move() {
		if(up) {
			y -= SPEED;
		}
		if(down) {
			y += SPEED;
		}
		if(right) {
			x += SPEED;
		}
		if(left) {
			x -= SPEED;
		}
		if(mouseP) {
			x= mouseP_x;
			y= mouseP_y;
		}
	}

	
	public static void main(String[] args) {
		new Robot(); 
	}
}
